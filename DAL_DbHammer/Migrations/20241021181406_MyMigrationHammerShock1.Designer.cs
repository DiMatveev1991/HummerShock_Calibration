// <auto-generated />
using System;
using DAL_DbHammer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL_DbHammer.Migrations
{
    [DbContext(typeof(HummerShockDb))]
    [Migration("20241021181406_MyMigrationHammerShock1")]
    partial class MyMigrationHammerShock1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL_DbHammer.DAL.CalibHammer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("sampleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("sampleId");

                    b.ToTable("CalibHummers");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.CalibrationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeCalib")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("calibHammerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("calibHammerId");

                    b.ToTable("CalibInfo");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.ManufactureName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManufactureNames");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.Mass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("mass")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("masses");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.RefAccelerometer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeAcs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("refAccelerometers");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.SamplRefAcc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccelerometerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmplitudeImpuls")
                        .HasColumnType("float");

                    b.Property<double>("PulseTimeMs")
                        .HasColumnType("float");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Сoefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AccelerometerId");

                    b.ToTable("samplRefAccs");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.Sample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HighLevelMeasurement")
                        .HasColumnType("int");

                    b.Property<int>("LowLevelMeasurement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManufactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PermissibleCoefficientDeviation")
                        .HasColumnType("float");

                    b.Property<string>("TypeHammer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("linearity")
                        .HasColumnType("float");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Сoefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ManufactureId");

                    b.ToTable("samples");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.CalibHammer", b =>
                {
                    b.HasOne("DAL_DbHammer.DAL.Sample", "sample")
                        .WithMany()
                        .HasForeignKey("sampleId");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.CalibrationInfo", b =>
                {
                    b.HasOne("DAL_DbHammer.DAL.CalibHammer", "calibHammer")
                        .WithMany("calibrationInfos")
                        .HasForeignKey("calibHammerId");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.SamplRefAcc", b =>
                {
                    b.HasOne("DAL_DbHammer.DAL.RefAccelerometer", "Accelerometer")
                        .WithMany("sampleRefAccsrlerometr")
                        .HasForeignKey("AccelerometerId");
                });

            modelBuilder.Entity("DAL_DbHammer.DAL.Sample", b =>
                {
                    b.HasOne("DAL_DbHammer.DAL.ManufactureName", "Manufacture")
                        .WithMany("Samples")
                        .HasForeignKey("ManufactureId");
                });
#pragma warning restore 612, 618
        }
    }
}
