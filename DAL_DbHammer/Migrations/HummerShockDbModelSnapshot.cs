// <auto-generated />
using System;
using DAL_DbHammer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL_DbHammer.Migrations
{
    [DbContext(typeof(HummerShockDb))]
    partial class HummerShockDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL_DbHummer.DAL.CalibHummer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SampleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SampleId");

                    b.ToTable("CalibHummers");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.CalibrationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalibHummerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CalibHummerId");

                    b.ToTable("CalibInfo");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.ManufactureName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManufactureNames");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.Mass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("mass")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("masses");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.RefAccelerometer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmplitudeImpuls")
                        .HasColumnType("float");

                    b.Property<string>("Manufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PulseTimeMs")
                        .HasColumnType("float");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeAcs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Сoefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("refAccelerometers");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.Sample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HighLevelMeasurement")
                        .HasColumnType("int");

                    b.Property<int>("LowLevelMeasurement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManufactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PermissibleCoefficientDeviation")
                        .HasColumnType("float");

                    b.Property<string>("TypeHammer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("linearity")
                        .HasColumnType("float");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Сoefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ManufactureId");

                    b.ToTable("samples");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.CalibHummer", b =>
                {
                    b.HasOne("DAL_DbHummer.DAL.Sample", "Sample")
                        .WithMany()
                        .HasForeignKey("SampleId");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.CalibrationInfo", b =>
                {
                    b.HasOne("DAL_DbHummer.DAL.CalibHummer", "CalibHummer")
                        .WithMany("calibrationInfos")
                        .HasForeignKey("CalibHummerId");
                });

            modelBuilder.Entity("DAL_DbHummer.DAL.Sample", b =>
                {
                    b.HasOne("DAL_DbHummer.DAL.ManufactureName", "Manufacture")
                        .WithMany("Samples")
                        .HasForeignKey("ManufactureId");
                });
#pragma warning restore 612, 618
        }
    }
}
